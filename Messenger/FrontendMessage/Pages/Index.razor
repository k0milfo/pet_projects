@page "/"
@using FrontendMessage.Entity
@using FrontendMessage.Service.Interface
@using MudBlazor
@inject MainApiClient Http
@inject ITokenStorage TokenStorage
@inject NavigationManager Navigation

<PageTitle>Вход в чат</PageTitle>


<MudTextField @bind-Value="_email" Label="Логин" />
<MudTextField @bind-Value="_password" Label="Пароль" />
<MudButton OnClick="HandleLogin" type="button">Принять</MudButton>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div style="color: red;">@_errorMessage</div>
}

@code {
    private string _email = string.Empty;
    private string _password = string.Empty;
    private string _errorMessage = string.Empty;

    private async Task HandleLogin()
    {

        if (string.IsNullOrWhiteSpace(_email) ||
            string.IsNullOrWhiteSpace(_password))
        {
            _errorMessage = "Заполните все поля";
            return;
        }

        try
        {
            var response = await Http.Client.PostAsJsonAsync("api/identity/login",
                new {Email = _email, Password = _password});

            if (response.IsSuccessStatusCode)
            {
                var tokens = await response.Content.ReadFromJsonAsync<TokenResponse>();
                await TokenStorage.SaveAuthDataAsync(tokens!, _email);
                Navigation.NavigateTo("/Chat");
            }
            else
            {
                _errorMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Ошибка: {ex.Message}";
        }
    }
}

