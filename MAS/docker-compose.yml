services:
  data_ingestion_service:
    build:
      context: ./DataIngestionService
      dockerfile: DataIngestionService/Dockerfile
    ports:
      - "5000:8080"
    networks:
      - my_network

  monitoring_service:
    container_name: monitoring_service
    build:
      context: ./MonitoringService
      dockerfile: MonitoringService/Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      mssql_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - my_network

  telegram_service:
    build:
      context: ./TelegramService
      dockerfile: TelegramService/Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      mssql_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      #  - monitoring_service
   #   rabbitmq:
  #      condition: service_healthy
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # порт для взаимодействия приложений
      - "15672:15672" # порт для доступа к веб-интерфейсу управления
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my_network
        
  mssql_db:
    container_name: mssql_db
    image: bitwarden/mssql:latest
    environment:
     - MSSQL_SA_PASSWORD=YourStrong!Password
     - ACCEPT_EULA=Y
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S mssql_db -U sa -P YourStrong!Password -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "1433:1433"
    networks:
      - my_network
    
networks:
  my_network:
    driver: bridge
